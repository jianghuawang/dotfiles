# Use Ctrl+A as the prefix key
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Make `Ctrl+A R` reload the config file
unbind r
bind r source-file ~/.tmux.conf

# Move between panes with vi keys
# bind h select-pane -L
#
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R

# split panes using | and -
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# set -g default-terminal "tmux-256color"
set -s escape-time 0

# set scroll history to 100,000 lines
set-option -g history-limit 100000

set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"

######################
### DESIGN CHANGES ###
######################

# loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

#  modes
setw -g clock-mode-colour colour135
setw -g mode-style 'fg=colour196 bg=colour238 bold'

# panes
set -g pane-border-style 'fg=colour238 bg=colour235'
set -g pane-active-border-style 'fg=colour208 bg=colour236'

# statusbar
set -g status-position bottom
set -g status-justify left
set -g status-style 'bg=colour166 fg=colour131 dim'
# set -g status-style 'bg=colour234 fg=colour131 dim'
set -g status-interval 2
set -g status-left ''
# set -g status-right '#{prefix_highlight} #(gitmux #{pane_current_path}) #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right '#{prefix_highlight} #[fg=colour231,bg=colour04]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default] #[fg=colour233,bg=colour245,bold] %H:%M:%S '
# set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-style 'fg=colour172 bg=colour238 bold'
# setw -g window-status-current-format ' #I#[fg=colour249]:#[fg=colour255]#W#[fg=colour249]#F '
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour226]#F '

setw -g window-status-style 'fg=colour138 bg=colour235 none'
# setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold'

# messages
set -g message-style 'fg=colour232 bg=colour166 bold'
set -g message-command-style 'fg=blue bg=black'

#####################################################

#  Use vi key bindings in tmux. 
set -g mode-keys vi
# set things up so that v starts a selection and y finishes it in the same way that Space and Enter do, more like Vim:
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# Fast pane-switch with neovim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'
